const puppeteer = require("puppeteer-extra");
const StealthPlugin = require("puppeteer-extra-plugin-stealth");
const fs = require("fs");

puppeteer.use(StealthPlugin());

// ‚úèÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô Facebook
const EMAIL = "test.face112@gmail.com";
const PASSWORD = "passW@rd";

// ‚úèÔ∏è ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
const SEARCH_QUERY = "‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå";

async function searchFacebookGroups() {
  const browser = await puppeteer.launch({
    headless: false,
    defaultViewport: null,
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
  });

  const page = await browser.newPage();

  console.log("üîπ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Facebook...");
  await page.goto("https://www.facebook.com/login", { waitUntil: "networkidle2" });

  await page.type("#email", EMAIL, { delay: 50 });
  await page.type("#pass", PASSWORD, { delay: 50 });

  await Promise.all([
    page.click('button[name="login"]'),
    page.waitForNavigation({ waitUntil: "networkidle2" }),
  ]);

  console.log("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

  const searchUrl = `https://www.facebook.com/search/groups/?q=${encodeURIComponent(
    SEARCH_QUERY
  )}`;
  console.log(`üîé ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "${SEARCH_QUERY}"...`);
  await page.goto(searchUrl, { waitUntil: "networkidle2" });

  // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏£‡∏≤‡∏Å‡∏è
  await new Promise((resolve) => setTimeout(resolve, 5000));

  // Scroll ‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
  console.log("üìú ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°...");
  for (let i = 0; i < 5; i++) {
    await page.evaluate(() => window.scrollBy(0, window.innerHeight));
    await new Promise((resolve) => setTimeout(resolve, 2000));
  }

  console.log("üì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°...");
  const groups = await page.evaluate(() => {
    const results = [];
    const anchors = document.querySelectorAll('a[href*="/groups/"]');

    anchors.forEach((a) => {
      const href = a.getAttribute("href");
      const name = a.innerText?.trim();

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏£‡∏¥‡∏á
      if (
        href &&
        name &&
        href.includes("/groups/") &&
        !href.includes("invite") &&
        !href.includes("create") &&
        !href.includes("join")
      ) {
        const url = href.startsWith("http") ? href : `https://www.facebook.com${href}`;
        results.push({
          name,
          url: url.split("?")[0],
        });
      }
    });

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ã‡πâ‡∏≥
    const unique = [];
    const seen = new Set();
    for (const g of results) {
      if (!seen.has(g.url)) {
        seen.add(g.url);
        unique.push(g);
      }
    }
    return unique;
  });

  console.log(`‚úÖ ‡∏û‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${groups.length} ‡∏Å‡∏•‡∏∏‡πà‡∏°`);
  console.table(groups.slice(0, 10));

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
  fs.writeFileSync("groups.json", JSON.stringify(groups, null, 2), "utf8");
  console.log("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå groups.json");

  await browser.close();
}

searchFacebookGroups().catch(console.error);
